// Küche (Kevins Haus)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oMikrowelle.Clickable = false;
	oWasser.Clickable = false;

	Door[eDoorNumKueche].Init(oTuer, hTuer);
	Door[eDoorNumWasser2].Init(oWasser, hWasserhahn);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumKueche].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oMikrowelle_AnyClick()
{
	if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle. Standard-Modell.");
			player.Say("Die Tür ist auf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Mikro ist noch zu.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(83);
			oMikrowelle.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Laut Gebrauchsanweisung soll ich das nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oKuehlschrank_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich muss mir demnächst mal einen mit Gefrierfach kaufen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich war froh als er endlich hier stand. Der kommt mir erst weg, wenn ich einen neuen kaufe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und was soll ich da reinlegen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oKuehlschrank.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Tür knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verträgt die Kälte nicht so gut.");
		}
		else Unhandled();
	}
}

function oHaengeschrank01_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist nichts drin. Ich sollte vielleicht mal wieder einkaufen fahren.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die Tür ist bereits auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oHaengeschrank01.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann vergesse ich es da drin wieder.");
		}
		else Unhandled();
	}
}

function oKettensaege_AnyClick()
{
	if (any_click_move(200, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine schöne rote Kettensäge.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die benötige ich jetzt nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ohne Zweitaktbenzin läuft die nicht.");
			player.Say("Außerdem ist kein Öl mehr drin.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Yep, kein Benzin mehr drin.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Alee Verschraubungen sind bereits zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die läuft ohne Benzin nicht an.");
			player.Say("Aber einmal am Starter ziehen, damit der Kolben nicht fest frisst kann nicht schaden.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Grundkörper federt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist weder Benzin, noch Öl.");
		}
		else Unhandled();
	}
}

function oSchrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSchrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oDoppelschrank_AnyClick()
{
	if (any_click_move(120, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oDoppelschrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade01_AnyClick()
{
	if (any_click_move(130, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSchublade01.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade02_AnyClick()
{
	if (any_click_move(107, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSchublade02.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSpuelschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSpuelschrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oHaengeschrank02_AnyClick()
{
	if (any_click_move(140, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oHaengeschrank02.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}

function oSchublade03_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist schon auf.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			oSchublade03.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da reinlegen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hSchrank_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Schränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte es erst öffnen.");
		}
		else Unhandled();
	}
}

function hMikrowelle_AnyClick()
{
	if (any_click_move(240, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Mikrowelle. Standard-Modell.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wozu? Die Mikrowelle ist leer!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(85);
			oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("In die geschlossene Mikro?");
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
	if (any_click_move(60, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich muss mir demnächst mal einen mit Gefrierfach kaufen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich war froh als er endlich hier stand. Der kommt mir erst weg, wenn ich einen neuen kaufe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da steht: \"Vor Gebrauch öffnen.\"");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oKuehlschrank.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Er knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich sollte ihn dazu erst öffnen.");
		}
		else Unhandled();
	}
}

function hHaengeschrank01_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein geschlossener Küchenschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oHaengeschrank01.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Tür ist bereits zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hHerd_AnyClick()
{
	if (any_click_move(170, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Herd.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht, was ich da rein tun soll.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nicht jetzt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist in die Küchenzeile eingelassen. Also keine Chance.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das brät so schlecht.");
		}
		else Unhandled();
	}
}

function hGeschirrspueler_AnyClick()
{
	if (any_click_move(217, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Geschirrspüler.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist in der Küche verbaut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe kein Geschirr bei mir.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ohne Geschirr brauche ich ihn auch nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist kein Geschirr.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich kann die Straße sehen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das kann ich nicht nehmen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich kann vielleicht durchschauen, es aber nicht benutzen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Küche braucht nicht gelüftet zu werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Fenster ist zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das werfe ich nicht aus dem Fenster.");
		}
		else Unhandled();
	}
}

function hSchublade01_AnyClick()
{
	if (any_click_move(130, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSchublade01.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist ein Waschbecken.");
			player.FaceDirection(eDirDown);
			player.Say("Das hättest du nicht gedacht, was?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dazu brauche ich erst einmal Werkzeug.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wasche mir die Hände im Bad.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Abfluss ist bereits offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich verstopfe den Abfluss nur, wenn ich Geschirr zu waschen habe.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein danke.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in das Waschbecken legen.");
		}
		else Unhandled();
	}
}

function hWasserhahn_AnyClick()
{
	if (any_click_move(260, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da kommt Wasser raus.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann läuft mir die Küche mit Wasser voll.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe ncihts, was ich waschen könnte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !oWasser.Visible )
			{
				PlayAmbientSound(1, 95, 150, 51, 131);
				oWasser.Visible = true;
				Door[eDoorNumWasser2].i_GlobalInt = eDoorOpen;		// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( oWasser.Visible )
			{
				StopAmbientSound(1);
				oWasser.Visible = false;
				Door[eDoorNumWasser2].i_GlobalInt = eDoorClosed;		// Türenskript für den Wasserhahn mißbraucht
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der Hahn sitzt fest in der Wand.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hHaengeschrank02_AnyClick()
{
	if (any_click_move(140, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Hängeschränkchen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oHaengeschrank02.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSchublade02_AnyClick()
{
	if (any_click_move(107, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSchublade02.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hDoppelschrank_AnyClick()
{
	if (any_click_move(120, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Doppelschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oDoppelschrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSpuelschrank_AnyClick()
{
	if (any_click_move(250, 130, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Schrank unter der Spüle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSpuelschrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}

function hSchublade03_AnyClick()
{
	if (any_click_move(250, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			oSchublade03.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Erst öffnen, dann reinlegen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
